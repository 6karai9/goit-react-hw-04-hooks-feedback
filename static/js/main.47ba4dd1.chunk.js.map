{"version":3,"sources":["Components/Feedback/Statistics/Statistics.module.css","Components/Feedback/FeedbackButtons/FeedbackButtons.module.css","Components/Feedback/Section/Section.module.css","Components/Feedback/Section/Section.js","Components/Feedback/FeedbackButtons/FeedbackButtons.js","Components/Feedback/Statistics/Statistics.js","Components/Feedback/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","FeedbackButtons","feedbackKeysArr","onhandleFeedbackGiven","btnWrap","map","item","type","btn","onClick","Statistics","good","neutral","bad","total","positiveFeedback","list","itemNotify","Notification","message","App","useState","setGood","setneutral","setbad","countTotalFeedback","key","increment","prevState","positiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,kBCA/DD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,iBCAnED,EAAOC,QAAU,CAAC,UAAY,6B,4ICefC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,6BAAKJ,IACJC,M,gBCoBQI,EAvBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,sBAApB,OACtB,qBAAKL,UAAWC,IAAEK,QAAlB,SACGF,EAAgBG,KAAI,SAAAC,GACnB,OACE,wBAEEC,KAAK,SACLT,UAAWC,IAAES,IACbC,QAAS,kBAAMN,EAAsBG,IAJvC,SAMGA,GALIA,S,gBCeAI,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OACjB,qBAAIjB,UAAWC,IAAEiB,KAAjB,UACE,qBAAIlB,UAAWC,IAAEkB,WAAjB,mBAAoCN,KACpC,qBAAIb,UAAWC,IAAEkB,WAAjB,sBAAuCL,KACvC,qBAAId,UAAWC,IAAEkB,WAAjB,kBAAmCJ,KACnC,qBAAIf,UAAWC,IAAEkB,WAAjB,oBAAqCH,KACrC,qBAAIhB,UAAWC,IAAEkB,WAAjB,0CACyBF,EADzB,YCPW,SAASG,EAAT,GAAoD,IAAD,IAA3BC,eAA2B,MAAjB,cAAiB,EAChE,OAAO,4BAAIA,ICEE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOT,EAAP,KAAgBW,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOR,EAAP,KAAYW,EAAZ,KAoBMC,EAAqB,WACzB,OAAOd,EAAOC,EAAUC,GAa1B,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAASF,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEM,gBAAiB,CAAC,OAAQ,UAAW,OACrCC,sBArCoB,SAAAuB,GAC1B,IAAMC,EAAY,SAAAC,GAAS,OAAIA,EAAY,GAC3C,OAAQF,GACN,IAAK,OACHJ,EAAQK,GACR,MACF,IAAK,UACHJ,EAAWI,GACX,MACF,IAAK,MACHH,EAAOG,SA+BT,cAAC,EAAD,CAAS/B,MAAO,aAAhB,SAC4B,IAAzB6B,IACC,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,iBA1B8B,WACtC,IAAIc,EAA6B,EAMjC,OALa,IAATlB,IACFkB,EAA6BC,KAAKC,MAC/BpB,EAAOc,IAAwB,MAG7BI,EAmBmBG,KAGpB,cAACd,EAAD,CAAcC,QAAQ,2BCxDhCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.47ba4dd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2Dp47\",\"itemNotify\":\"Statistics_itemNotify__3VzV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrap\":\"FeedbackButtons_btnWrap__qB-S-\",\"btn\":\"FeedbackButtons_btn__3rtxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__30cie\"};","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={s.container}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackButtons.module.css';\n\nconst FeedbackButtons = ({ feedbackKeysArr, onhandleFeedbackGiven }) => (\n  <div className={s.btnWrap}>\n    {feedbackKeysArr.map(item => {\n      return (\n        <button\n          key={item}\n          type=\"button\"\n          className={s.btn}\n          onClick={() => onhandleFeedbackGiven(item)}\n        >\n          {item}\n        </button>\n      );\n    })}\n  </div>\n);\n\nFeedbackButtons.propTypes = {\n  onGood: PropTypes.string,\n  onNeutral: PropTypes.string,\n  onBad: PropTypes.string,\n};\n\nexport default FeedbackButtons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => (\n  <ul className={s.list}>\n    <li className={s.itemNotify}>Good: {good}</li>\n    <li className={s.itemNotify}>Neutral: {neutral}</li>\n    <li className={s.itemNotify}>Bad: {bad}</li>\n    <li className={s.itemNotify}>Total: {total}</li>\n    <li className={s.itemNotify}>\n      Positive feedback: {`${positiveFeedback}%`}\n    </li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positiveFeedback: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message = 'No feedback' }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import { useState } from 'react';\nimport Section from './Components/Feedback/Section/Section';\nimport FeedbackButtons from './Components/Feedback/FeedbackButtons/FeedbackButtons';\nimport Statistics from './Components/Feedback/Statistics/Statistics';\nimport Notification from './Components/Feedback/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setneutral] = useState(0);\n  const [bad, setbad] = useState(0);\n\n  const handleFeedbackGiven = key => {\n    const increment = prevState => prevState + 1;\n    switch (key) {\n      case 'good':\n        setGood(increment);\n        break;\n      case 'neutral':\n        setneutral(increment);\n        break;\n      case 'bad':\n        setbad(increment);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    let positiveFeedbackPercentage = 0;\n    if (good !== 0) {\n      positiveFeedbackPercentage = Math.round(\n        (good / countTotalFeedback()) * 100,\n      );\n    }\n    return positiveFeedbackPercentage;\n  };\n\n  return (\n    <div className=\"app\">\n      <Section title={'Please leave feedback'}>\n        <FeedbackButtons\n          feedbackKeysArr={['good', 'neutral', 'bad']}\n          onhandleFeedbackGiven={handleFeedbackGiven}\n        />\n      </Section>\n\n      <Section title={'Statistics'}>\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positiveFeedback={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}